/*
Embedded

Styleguide 0.2
*/

/*
img

An img element represents an image. The image given by the src attribute is the embedded content, and the value of the alt attribute is the img element's fallback content.
The src attribute must be present, and must contain a valid non-empty URL potentially surrounded by spaces referencing a non-interactive, optionally animated, image resource that is neither paged nor scripted.
The img element must not be used as a layout tool. In particular, img elements should not be used to display transparent images, as they rarely convey meaning and rarely add anything useful to the document.

Markup:
<img src="http://placehold.it/350x150" alt="Image served from placeholder service">
<img src="/foo.jpg" alt="Sample text for a broken image">

Styleguide 0.2.1
*/
img
{
	// So that `alt` text is visually offset if images donâ€™t load.
	font-style 					:italic;

	// Fluid images
	max-width 					:100%;
	height						:auto;
	vertical-align 				:middle;
}

.img
{
	&--rounded
	{

	}

	&--thumbnail
	{

	}

	&--circle
	{

	}
}

/*
iframe

The iframe element represents a nested browsing context.
For iframe elements in HTML documents, the attribute, if present, must have a value using the HTML syntax that consists of the following syntactic components, in the given order:
* Any number of comments and space characters.
* Optionally, a DOCTYPE.
* Any number of comments and space characters.
* The root element, in the form of an html element.
* Any number of comments and space characters.

Markup:
<iframe height="500" width="500" src="http://google.com"></iframe>

Styleguide 0.2.2
*/
iframe
{
	width 						:100%;
	display 					:block;
	border						:0;
}

/*
embed

Represents an integration point for an external(typically non-HTML) application or interactive content.
The optional src attribute specifies the URL of the resource being embedded.
The optional type attribute specifies the MIME type of the plugin to instantiate. The value must be a valid MIME type, optionally with parameters. If both the type attribute and the src attribute are present, then the type attribute must specify the same MIME type as the explicit Content-Type metadata of the resource given by the src attribute.

Markup:
<embed src="movieclip.mov">

Styleguide 0.2.3
*/
embed
{

}

/*
object

The object element can represent an external resource, which, depending on the type of the resource, will either be treated as an image, as a nested browsing context, or as an external resource to be processed by a plugin.

Markup:
<object>
	<param name="movie" value="http://www.youtube.com/v/XZ5TajZYW6Y?fs=1&amp;hl=en_GB"></param>
	<param name="allowFullScreen" value="true"></param>
	<param name="allowscriptaccess" value="always"></param>
	<embed src="http://www.youtube.com/v/XZ5TajZYW6Y?fs=1&amp;hl=en_GB" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="390"></embed>
</object>

Styleguide 0.2.4
*/
object
{

}

param
{

}

/*
video

Represents a video or movie.
Content may be nested inside the video element. User agents should not show this content to the user. Authors should use this content to force older browsers to use a legacy video plugin or to inform the user of how to access the video content.

Markup:
<video src="video.ogv" controls poster="poster.jpg" width="320" height="240">
	<a href="video.ogv">Download song</a>
</video>

Styleguide 0.2.5
*/
video
{

}

/*
audio

Represents a sound or audio stream.

Content may be nested inside the audio element. User agents should not show this content to the user. Authors should use this content to force older browsers to use a legacy audio plugin or to inform the user of how to access the audio content.

Markup:
<audio src="music.oga" controls>
	<a href="music.oga">Download song</a>
</audio>

Styleguide 0.2.6
*/
audio
{

}

source
{

}

/*
canvas

Represents a resolution-dependent bitmap canvas, which can be used for rendering graphs, game graphics, or other visual images on the fly.
Authors should not use the canvas element in a document when a more suitable element is available. For example, it is inappropriate to use a canvas element to render a page heading. If the desired presentation of the heading is graphically intense, it should be marked up using appropriate elements (typically h1) and then styled using CSS and supporting technologies such as XBL.
When authors use the canvas element, they must also provide content that, when presented to the user, conveys essentially the same function or purpose as the bitmap canvas. This content should be nested within the canvas element as a fallback.

Markup:
<canvas id="myCanvas" width="300" height="150">
	Fallback content, in case the browser does not support Canvas.
</canvas>

Styleguide 0.2.7
*/
canvas
{

}

/*
track

The track element allows authors to specify explicit external timed text tracks for media elements. It does not represent anything on its own.

*/
track
{

}

/*
map

The map element, in conjunction with any area element descendants, defines an image map. The element represents its children.

Markup:
...

Styleguide 0.2.8
*/
map
{

}

/*
area

The area element represents either a hyperlink with some text and a corresponding area on an image map, or a dead area on an image map.
If the area element has no href attribute, then the area represented by the element cannot be selected, and the alt attribute must be omitted.

*/
area
{

}
